plugins {
    id 'java-library'
    id 'signing'
    id 'checkstyle'
    id 'maven-publish'
}


group 'io.github.grrolland'
archivesBaseName = 'vault-java-driver'
version '5.4.1'

// This project is actually limited to Java 8 compatibility.  See below.
sourceCompatibility = 8
targetCompatibility = 8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('junit:junit:4.13.2')
    testImplementation('org.mockito:mockito-core:5.4.0')
    testImplementation('org.testcontainers:testcontainers:1.19.1')
    testImplementation('org.eclipse.jetty:jetty-server:11.0.15')
    testImplementation('org.slf4j:slf4j-api:2.0.7')
    testImplementation('org.bouncycastle:bcprov-jdk15on:1.70')
    testImplementation('org.bouncycastle:bcpkix-jdk15on:1.70')
    testImplementation('org.apache.commons:commons-io:1.3.2')

    testRuntimeOnly('org.slf4j:slf4j-simple:2.0.5')
}

compileJava {
    exclude 'module-info.java'
    options.compilerArgs = ['--release', '8']
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

//
// Separate unit tests from integration tests.  See: `src/test-integration/README.md`
//
sourceSets {
    unitTests {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        java.srcDir file('src/test/java')
    }
    integrationTests {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        java.srcDir file('src/test-integration/java')
        resources.srcDirs += file('src/test-integration/resources')
    }
}

configurations {
    unitTestsImplementation.extendsFrom testImplementation
    unitTestsRuntimeOnly.extendsFrom testRuntimeOnly
    integrationTestsImplementation.extendsFrom testImplementation
    integrationTestsRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.named('test') {
    useJUnit()
    testClassesDirs = sourceSets.unitTests.output.classesDirs
    classpath = sourceSets.unitTests.runtimeClasspath
    testLogging {
        events "passed", "skipped", "failed"
    }

    reports.html.enabled = false
    reports.junitXml.enabled = true
}

def integrationTestTask = tasks.register('integrationTest', Test) {
    useJUnit()
    testClassesDirs = sourceSets.integrationTests.output.classesDirs
    classpath = sourceSets.integrationTests.runtimeClasspath
    testLogging {
        events "passed", "skipped", "failed"
    }

    reports.html.enabled = false
    reports.junitXml.enabled = true
}

publishing {
    publications {
        create<MavenPublication>("default") {
            from(components["java"])
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/grrolland/vault-java-driver"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}